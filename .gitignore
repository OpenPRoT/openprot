# Rust build artifacts
/target/
**/target/

# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
# Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# OS files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Dependency directories
node_modules/

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test
.env.production
.env.local

# Rust-specific
# Generated by rustdoc
doc/

# Generated by mdbook
book/
target/book/

# Backup files
*.bak
*.backup

# Temporary files
*.tmp
*.temp

# Distribution
dist/
target/dist/

# Local configuration
.cargo/config
!.cargo/config.toml

# Documentation build
/docs/book/

# Flamegraph output
flamegraph.svg
perf.data*

# Criterion benchmark output
criterion/

# Profiling data
*.profraw

# Cache directories
.cache/

# Local development
*.local

# Build scripts
build.rs.bk
